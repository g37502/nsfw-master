#!/usr/bin/env python
# coding=utf-8
'''
@auhor: gyl
@file: .py
@data: 2021/4/10 
@desc:
'''

# s=b'\n# coding: utf-8\n\n# \xe4\xb8\x80\xe3\x80\x81\xe7\xbc\x96\xe7\xa8\x8b\xe9\xa2\x98\n\n# 1\xe3\x80\x81\xe6\xa0\xb9\xe6\x8d\xae\xe8\xbe\x93\xe5\x85\xa5\xe5\x86\x85\xe5\xae\xb9\xe5\x88\xa4\xe6\x96\xad\xe5\x8d\x95\xe4\xbd\x8d\xe7\xb1\xbb\xe5\x9e\x8b\n\n# In[196]:\n\n\nimport re\n#\xe9\x95\xbf\xe5\xba\xa6\xe5\x8d\x95\xe4\xbd\x8d  \nlen_mm = [\'\xe6\xaf\xab\xe7\xb1\xb3\',\'mm\']\nlen_cm = [\'\xe5\x8e\x98\xe7\xb1\xb3\',\'cm\']\nlen_dm = [\'\xe5\x88\x86\xe7\xb1\xb3\',\'dm\']\nlen_km = [\'\xe5\x8d\x83\xe7\xb1\xb3\',\'km\']\nlen_m  = [\'\xe7\xb1\xb3\',\'m\']\nlen_um = [\'\xe5\xbe\xae\xe7\xb1\xb3\',\'\xce\xbcm\']\nlen_nm = [\'\xe7\xba\xb3\xe7\xb1\xb3\',\'nm\']\nlen_nmi = [\'\xe6\xb5\xb7\xe9\x87\x8c\',\'nmi\']\nlen_mi = [\'\xe8\x8b\xb1\xe9\x87\x8c\',\'mi\']\nlen_in = [\'\xe8\x8b\xb1\xe5\xaf\xb8\',\'in\']\nlen_yd = [\'\xe7\xa0\x81\',\'yd\']\nlen_fm = [\'\xe8\x8b\xb1\xe5\xaf\xbb\',\'fm\']\nlen_ft = [\'\xe8\x8b\xb1\xe5\xb0\xba\',\'ft\']\n# len_ps_all = len_mm + len_cm + len_dm + len_km + len_m + len_um + len_nm\n# len_bs_all = len_nmi + len_mi + len_in + len_yd + len_fm \nlen_ps = {\n    \'len_mm\':len_mm,\n    \'len_cm\':len_cm,\n    \'len_dm\':len_dm,\n    \'len_km\':len_km,\n    \'len_m\':len_m,\n    \'len_um\':len_um,\n    \'len_nm\':len_nm\n         }\nlen_bs = {\n    \'len_nmi\':len_nmi,\n    \'len_mi\':len_mi,\n    \'len_in\':len_in,\n    \'len_yd\':len_yd,\n    \'len_fm\':len_fm,\n    \'len_ft\':len_ft\n}\nlength_unit = len_mm + len_cm + len_dm + len_km + len_m + len_um + len_nm + len_nmi + len_mi + len_in + len_yd +len_fm \n\n# length_unit =   [\'\xe6\xaf\xab\xe7\xb1\xb3\',\'mm\',\'\xe5\x8e\x98\xe7\xb1\xb3\',\'cm\',\'\xe5\x88\x86\xe7\xb1\xb3\',\'dm\',\'\xe5\x8d\x83\xe7\xb1\xb3\',\'km\',\'\xe7\xb1\xb3\',\'m\',\'\xe5\xbe\xae\xe7\xb1\xb3\',\'\xce\xbcm\',\'\xe7\xba\xb3\xe7\xb1\xb3\',\'nm\',\'\xe8\x8b\xb1\xe5\xb0\xba\',\'\xe8\x8b\xb1\xe5\xaf\xb8\',\'\xe6\xb5\xb7\xe9\x87\x8c\',\'\xe8\x8b\xb1\xe5\xaf\xbb\',\'\xe7\xa0\x81\',\'\xe8\x8b\xb1\xe9\x87\x8c\']\n #\xe9\x9d\xa2\xe7\xa7\xaf\xe5\x8d\x95\xe4\xbd\x8d\narea_unit =   [\'mm\xc2\xb2\',\'\xe5\xb9\xb3\xe6\x96\xb9\xe6\xaf\xab\xe7\xb1\xb3\',\'cm\xc2\xb2\',\'\xe5\xb9\xb3\xe6\x96\xb9\xe5\x8e\x98\xe7\xb1\xb3\',\'dm\xc2\xb2\',\'\xe5\xb9\xb3\xe6\x96\xb9\xe5\x88\x86\xe7\xb1\xb3\',\'m\xc2\xb2\',\'\xe5\xb9\xb3\xe6\x96\xb9\xe7\xb1\xb3\',\'hm\xc2\xb2\',\'\xe5\x85\xac\xe9\xa1\xb7\',\'km\xc2\xb2\',\'\xe5\xb9\xb3\xe6\x96\xb9\xe5\x8d\x83\xe7\xb1\xb3\']\n #\xe4\xbd\x93\xe7\xa7\xaf\xe5\x8d\x95\xe4\xbd\x8d\nvolume_unit = [\'m\xc2\xb3\',\'\xe7\xab\x8b\xe6\x96\xb9\xe7\xb1\xb3\',\'dm\xc2\xb3\',\'\xe7\xab\x8b\xe6\x96\xb9\xe5\x88\x86\xe7\xb1\xb3\',\'cm\xc2\xb3\',\'\xe7\xab\x8b\xe6\x96\xb9\xe5\x8e\x98\xe7\xb1\xb3\',\'mm\xc2\xb3\',\'\xe7\xab\x8b\xe6\x96\xb9\xe6\xaf\xab\xe7\xb1\xb3\',\'L\',\'\xe5\x8d\x87\',\'\xe5\x88\x86\xe5\x8d\x87\',\'dl\',\'\xe5\x8e\x98\xe5\x8d\x87\',\'cl\',\'\xe5\x85\xac\xe7\x9f\xb3\',\'hl\',\'\xe5\xbe\xae\xe5\x8d\x87\',\'ul\']\n #\xe8\xb4\xa8\xe9\x87\x8f\xe5\x8d\x95\xe4\xbd\x8d\nquality_unit = [\'\xe5\x90\xa8\',\'t\',\'\xe5\x8d\x83\xe5\x85\x8b\',\'kg\',\'\xe5\x85\x8b\',\'g\',\'\xe6\xaf\xab\xe5\x85\x8b\',\'mg\',\'\xe5\xbe\xae\xe5\x85\x8b\',\'\xce\xbcg\']\n #\xe6\xb8\xa9\xe5\xba\xa6\xe5\x8d\x95\xe4\xbd\x8d\ntemperature_unit = [\'\xe5\x8d\x8e\xe6\xb0\x8f\xe5\xba\xa6\',\'\xe2\x84\x89\',\'\xe6\x91\x84\xe6\xb0\x8f\xe5\xba\xa6\',\'\xe2\x84\x83\']\n\nunit_type = {\n    \'\xe9\x95\xbf\xe5\xba\xa6\xe5\x8d\x95\xe4\xbd\x8d\' : length_unit,\n    \'\xe4\xbd\x93\xe7\xa7\xaf\xe5\x8d\x95\xe4\xbd\x8d\' : area_unit,\n    \'\xe5\xae\xb9\xe7\xa7\xaf\xe5\x8d\x95\xe4\xbd\x8d\' : volume_unit,\n    \'\xe8\xb4\xa8\xe9\x87\x8f\xe5\x8d\x95\xe4\xbd\x8d\' : quality_unit,\n    \'\xe6\xb8\xa9\xe5\xba\xa6\xe5\x8d\x95\xe4\xbd\x8d\' : temperature_unit\n}\n\nprint(unit_type)\n\nprint(len_ps,len_bs)\n    \n\n\n# In[2]:\n\n\nprint(len_ps[\'len_mm\'][0])\n  for k v in len_ps.items():\n        if unit in[v]:\n            print(k)\n\n\n# In[ ]:\n\n\nunit = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x8d\x95\xe4\xbd\x8d:\')\nfor k,v in unit_type.items():\n    for i in v:\n        if i == unit:\n             print(k)\n\n\n# In[ ]:\n\n\nprint(\'\xe5\x88\xa4\xe5\xae\x9a\xe9\x95\xbf\xe5\xba\xa6\xe5\x8d\x95\xe4\xbd\x8d\')\nvector = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe6\x95\xb0\xe9\x87\x8for\xe5\x8d\x95\xe4\xbd\x8d:\')\nunit = re.search(r\'\\D+\',vector,re.I|re.M).group().strip()\nfor k,v in unit_type.items():\n    if unit in  v:\n             print(\'\xe6\x82\xa8\xe8\xbe\x93\xe5\x85\xa5\xe7\x9a\x84\xe7\x9f\xa2\xe9\x87\x8f\xe5\x8d\x95\xe4\xbd\x8d\xe6\x98\xaf:\',k)\n\n\n# \xe5\x8d\x8e\xe6\xb0\x8f\xe6\xb8\xa9\xe5\xba\xa6\t\xe6\x91\x84\xe6\xb0\x8f\xe6\xb8\xa9\xe5\xba\xa6 jk\t\xe2\x84\x83 = (\xce\xbfF - 32) / 1.8\n# \xe6\x91\x84\xe6\xb0\x8f\xe6\xb8\xa9\xe5\xba\xa6\t\xe5\x8d\x8e\xe6\xb0\x8f\xe6\xb8\xa9\xe5\xba\xa6\t\xce\xbfF = \xe2\x84\x83 \xc3\x97 1.8 + 32\n\n# In[ ]:\n\n\ntemperature = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe6\xb8\xa9\xe5\xba\xa6:\')\nunit = re.search(r\'\\D\',temperature,re.I|re.M).group().strip()\ntempera_num = re.search(r\'\\d\',temperature,re.I|re.M).group().strip()\nif unit   in[\'\xe6\x91\x84\xe6\xb0\x8f\xe5\xba\xa6\',\'\xe2\x84\x83\']:\n    tempera_h = tempera_num *1.8 + 32\n    print(tempera_h)\nelif  unit in[\'\xe5\x8d\x8e\xe6\xb0\x8f\xe5\xba\xa6\',\'\xe2\x84\x89\']:\n    tempera_h = (empera_num-32)/1.8\n    print(f\'{tempera_h}\')\n    print(\'abd\')\n\n    \n\n\n# In[ ]:\n\n\nlen_m = 1\nlen_dm = len_m/10\nlen_m  = len_dm*10\nlen_m  = len_cm*100\nlen_cm = len_m/100\nlen_mm = len_m/1000\nlen_m  = len_mm*1000\nlen_km = len_m*1000\nlen_m  = len_km/1000\nlen_ft =1\nlen_in = len_ft/12\nlen_ft = len_in*12\nlen_nmi = len_ft*6076.1\nlen_ft = len_mmi/6076.1\nlen_yd = len_ft/36\nlen_ft = len_yd*36\nlen_mi =  len_ft*5280\nlen_ft = len_mi/5280\n\ndef len_cm:\n\n\n# In[143]:\n\n\nclass Tl:\n    @staticmethod\n    def len_m(len_m):\n        return float(len_m)/1\n    def len_m_m(len_mm):\n        return float(len_m)*1\n    def len_cm(len_cm):\n        return  float(len_cm)/100\n    def len_cm_m(len_cm_m):\n        return float(len_cm_m)*100\n    def len_mm(len_m):\n        return float(len_m)/1000\n    def len_mm_m(len_m):\n        return float(len_m)*1000\n    def len_dm(len_dm):\n        return float(len_dm)/10\n    def len_dm_m(len_m):\n        return float(len_m)*10\n    def len_km(len_km):\n        return float(len_km)*1000\n    def len_km_m(len_m):\n        return float(len_m)/1000\n    \n    def len_ft(len_ft):\n        return  float(len_ft)/1\n    def len_ft_m(len_ft_m):\n        return float(len_ft_m)*1\n    def len_in(len_in):\n        return  float(len_in)/12\n    def len_in_m(len_in_m):\n        return float(len_in_m)*12\n    def len_nmi(len_nmi):\n        return  float(len_nmi)*6076.1\n    def len_nmi_m(len_nmi_m):\n        return float(len_nmi_m)/606.1\n    def len_yd(len_yd):\n        return  float(len_yd)/36\n    def len_yd_m(len_yd_m):\n        return float(len_yd_m)*36\n    def len_mi(len_mi):\n        return  float(len_mi)/100\n    def len_cm_m(len_mi_m):\n        return float(len_mi_m)*100\n    def len_cm(len_fm):\n        return  float(len_fm)*6\n    def len_fm_m(len_fm_m):\n        return float(len_fm_m)/6\n    \n    def len_fm(len_m)\n        return len_m*3.281\n    def len_mf(len_ft)\n        return len_ft/3.281\n    \n    \n\n\n# In[86]:\n\n\nlen_prim = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6:\')\nlen_tar = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe9\x9c\x80\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe5\x8d\x95\xe4\xbd\x8d\')\nunit = re.search(r\'(\\D){1,3}\',len_prim,re.I|re.M).group().strip()\nlen_now = re.search(r\'\\d+\',len_prim,re.I|re.M).group().strip()\nfor k,v in len_ps.items():\n    if unit in v:\n        print(unit,1)\n        print(type(len_now),2)\n        print(k,3)\n#         len_m = Tl.len_cm(len_now)\n        len_m = getattr(Tl,"%s" % k)(len_now)\n        a = (\'%sm\' %(k))\n        print(a,4)\n        names = locals()\n#         names[\'%sm\' %(len_tar)] = getattr(Tl,"%s" % a)(len_m)\n        b = getattr(Tl,"%s" % a)(len_m)\n        print(b,8)\n        \n        print(len_m,5)\n#         print(len_mmm,6)\n        for k,v in len_ps.items():\n            print(k,7)\n            break\n#         d_len = Tl.leng_mm(len_m)\n#         print(d_len)\n        break\n#     if len_tar in len_ps:\n    else:\n        print(\'aa\')\n\n\n# In[135]:\n\n\ndef tar_for1(len_tar):\n    for k1,v1 in len_ps.items():\n        if len_tar in v1:\n            return k1\ndef tar_for2(len_tar):\n    for k1,v1 in len_bs.items():\n        if len_tar in v1:\n            return k1\n\n    \n\n\n# In[142]:\n\n\nlen_prim = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6:\')\nlen_tar = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe9\x9c\x80\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe5\x8d\x95\xe4\xbd\x8d\')\nunit = re.search(r\'(\\D){1,3}\',len_prim,re.I|re.M).group().strip()\nlen_now = re.search(r\'\\d+\',len_prim,re.I|re.M).group().strip()\nfor k,v in len_ps.items():\n    if unit in v:\n        len_m = getattr(Tl,"%s" % k)(len_now)               \n#         a = (\'len_%s_m\' %(len_tar))\n        a = f"{tar_for1(len_tar)}_m"\n#         print(k1,3)\n        b = getattr(Tl,"%s" % a)(len_m)\n        print(f\'\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6\xe6\x98\xaf{len_prim},\xe8\xbd\xac\xe6\x8d\xa2\xe5\x8d\x95\xe4\xbd\x8d\xe5\x90\x8e\xe7\x9a\x84\xe5\x80\xbc\xe6\x98\xaf{b}{len_tar}\')\n        break\n    else:\n        pass\n\n\n# In[148]:\n\n\nlen_prim = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6:\')\nlen_tar = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe9\x9c\x80\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe5\x8d\x95\xe4\xbd\x8d\')\nunit = re.search(r\'(\\D){1,3}\',len_prim,re.I|re.M).group().strip()\nlen_now = re.search(r\'\\d+\',len_prim,re.I|re.M).group().strip()\nfor k,v in len_bs.items():\n    if unit in v:\n        len_ft = getattr(Tl,"%s" % k)(len_now)   \n        a = f"{tar_for2(len_tar)}_m"\n        b = getattr(Tl,"%s" % a)(len_ft)\n        print(f\'\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6\xe6\x98\xaf{len_prim},\xe8\xbd\xac\xe6\x8d\xa2\xe5\x8d\x95\xe4\xbd\x8d\xe5\x90\x8e\xe7\x9a\x84\xe5\x80\xbc\xe6\x98\xaf{b}{len_tar}\')\n        break\n    else:\n        pass\n\n\n# In[224]:\n\n\nlen_prim = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe5\x8e\x9f\xe9\x95\xbf\xe5\xba\xa6:\')\nlen_tar = input(\'\xe8\xaf\xb7\xe8\xbe\x93\xe5\x85\xa5\xe9\x9c\x80\xe8\xa6\x81\xe8\xbd\xac\xe6\x8d\xa2\xe7\x9a\x84\xe5\x8d\x95\xe4\xbd\x8d\')\nunit = re.search(r\'(\\D){1,3}\',len_prim,re.I|re.M).group().strip()\nlen_now = re.search(r\'\\d+\',len_prim,re.I|re.M).group().strip()\nfor k,v in len_ps.items():\n    if unit in v:\n        for k,v in len_ps.items():\n            if len_tar in v:\n                print(True)\n                \n            else:\n                for k,v in len_bs.items():\n                    if len_tar in v:\n                        print(True)\n                    else:\n                         print(\'\xe8\xbe\x93\xe5\x85\xa5\xe6\x9c\x89\xe8\xaf\xaf\')\n    else:\n        for k,v in len_bs.items():\n            if unit in v:\n                for k,v in len_bs.items():\n                    if len_tar in v:\n                        pass\n                    else:\n                        for k,v in len_ps.items():\n                            if len_tar in v:\n                                pass\n                            else:\n                                print(\'\xe8\xbe\x93\xe5\x85\xa5\xe6\x9c\x89\xe8\xaf\xaf\')\n                            \n                \n        \n                \n\n\n\n# In[197]:\n\n\n\na = {\n    1:[\'a1\',\'a2\'],2:[\'b1\',\'b2\'],3:[\'c1\',\'c2\']\n}\nprint(a.popitem())\n# a = {1:\'a1\',2:\'b1\',3:\'c1\'}\nb=\'b1\'\nc=\'c1\'\nprint(a.values())\nif c in a.values() and  b in a.values():\n    print(\'ok\')\nelse:\n    print(\'Flosg\')\n\n\n# In[205]:\n\n\na = {\n    1:[\'a1\',\'a2\'],2:[\'b1\',\'b2\'],3:[\'c1\',\'c2\']\n}\na.values()\n\n\n# In[221]:\n\n\na=[{1:2},3]\n# type(a.index[0])\ntype(a[0][1])\n\n'
# import os
# pathshell="D:\py2021\nsfw-master\TxtFilter.v2.0715\TxtFilterTest\Debug\TxtFilterTest"
# ter="D:\py2021\nsfw-master\TxtFilter.v2.0715\termList.dat"
# mod="D:\py2021\nsfw-master\TxtFilter.v2.0715\model9.v2.dat"
# file="D:\py2021\nsfw-master\tmp\settings.py"
# s=os.system(pathshell + ' '+ter+' '+mod+' '+ file)
# print(s)

import magic
# import rarfile
win=open(r'D:\常用\常用\云平台-主备倒换方案.docx','rb')
# win.readline()

a= magic.from_buffer(win.read(2048))
print(a)